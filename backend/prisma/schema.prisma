// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String            @id @default(uuid())
  clerkId   String            @unique
  role      String            @default("basic")
  timezone  String?
  goals     Goal[]
  sessions  PomodoroSession[]
  notes     Note[]
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
}

model Goal {
  id          String   @id @default(uuid())
  title       String
  description String?
  completed   Boolean  @default(false)
  notes       Note[]
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model PomodoroSession {
  id        String   @id @default(uuid())
  startedAt DateTime @default(now())
  duration  Int
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Note {
  id        String   @id @default(uuid())
  title     String
  content   String
  tags      String[] @default([])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  goalId    String?
  goal      Goal?    @relation(fields: [goalId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
